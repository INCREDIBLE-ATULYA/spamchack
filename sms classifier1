library(tm)
library(wordcloud)
library(RColorbrewer)
library(NLP)
library(dplyr)
library(qdap)
library(e1071)
library(caret)
library(randomForest)
data<- read.delim(file.choose(),header = FALSE,stringsAsFactor = FALSE)
clean<- function(x){
xx<- VCorpus(vectorsource(x))
tm_map(xx,content_transformer(tolower))
tm_map(xx,removeNumbers)
tm_map(xx,removePunctuations)
tm_map(xx,removeWords,stopwords("en"))
tm_map(xx,stemDocument)
tm_map(xx,stripWhitespace)
}
data1<- clean(data)
data2<- DocumentTermMatrix(data1)
data3<- removeSparseTerm(data2)
data4<-as.data.frame(as.matrix(data3))
data4[,"out"]<- data$v1
data4$out<-factor(data4$out)
colnames(data4)<-make.names(colnames(data4))
traindata<-sample_frac(data4,0.8)
 did<-as.numeric(rownames(traindata))
testdata<- data4[-did,]
rf<- randomForest(out~.,data = data4)
plot(rf)
et<- tuneRF(traindata[,-31],traindata[,31],stepfactor = 0.8,plot = TRUE,ntreeTry = 300,trace = TRUE,improve = 0.05)
 hh<- randomforest(out~.,data= traindata,ntree = 100,mtry = 5,importance = TRUE,Proximity = TRUE)
 dd<-predict(hh,newdata = testdata[,-31])
table(dd,testdata[,31])
confusionMatrix(dd,testdata[,31])
 tp<- tune.svm(out~.,data = traindata,gamma = 10^(-5:-1),cost = 10^(-3:1))
 summary(tp)
  svm1<- svm(out~.,data = traindata,method = "c-classification",kernal = "radial",gamma = 0.1,cost = 10)
 yt<- predict(svm1,testdata[,-31])
  table(yt,testdata[,31])
  confusionMatrix(yt,testdata[,31])
  
      